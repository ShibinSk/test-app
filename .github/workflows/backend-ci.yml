name: CI - test-app

on:
  workflow_dispatch:
  push:
    branches: [main]

env:
  AWS_REGION: eu-north-1
  ECR_REPOSITORY: test-backend

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Write Firebase Service Account JSON
        run: echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" >test-app-2ce2d-firebase-adminsdk-fbsvc-544269e24b.json

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::776410619441:role/github-actions-cicd
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'false'

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Automatic Tagging of Releases
        id: increment-git-tag
        run: bash ./git_update.sh -v minor

      - name: Build project
        run: pnpm build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: linux/arm64 #,linux/amd64
          push: true
          # tags: user/app:latest
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest #, $--{{ steps.login-ecr.outputs.registry }}/$--{{ env.ECR_REPOSITORY }}:$--{{ steps.increment-git-tag.outputs.git-tag }}
